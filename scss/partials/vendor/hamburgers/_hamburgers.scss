@charset "UTF-8";
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Load settings first
@use "sass:map";
@use "base" as *; // Import base styles
@use "./settings" as settings; // Import settings for $hamburger-types

// Conditionally Include Types Using `@use ... with`
// ==================================================
// Define namespaces for each type file.
@use "types/3dx" as t3dx with ($hamburger-types: settings.$hamburger-types);
@use "types/3dx-r" as t3dxr with ($hamburger-types: settings.$hamburger-types);
@use "types/3dy" as t3dy with ($hamburger-types: settings.$hamburger-types);
@use "types/3dy-r" as t3dyr with ($hamburger-types: settings.$hamburger-types);
@use "types/3dxy" as t3dxy with ($hamburger-types: settings.$hamburger-types);
@use "types/3dxy-r" as t3dxyr with ($hamburger-types: settings.$hamburger-types);
@use "types/arrow" as arrow with ($hamburger-types: settings.$hamburger-types);
@use "types/arrow-r" as arrowr with ($hamburger-types: settings.$hamburger-types);
@use "types/arrowalt" as arrowalt with ($hamburger-types: settings.$hamburger-types);
@use "types/arrowalt-r" as arrowaltr with ($hamburger-types: settings.$hamburger-types);
@use "types/arrowturn" as arrowturn with ($hamburger-types: settings.$hamburger-types);
@use "types/arrowturn-r" as arrowturnr with ($hamburger-types: settings.$hamburger-types);
@use "types/boring" as boring with ($hamburger-types: settings.$hamburger-types);
@use "types/collapse" as collapse with ($hamburger-types: settings.$hamburger-types);
@use "types/collapse-r" as collapsr with ($hamburger-types: settings.$hamburger-types);
@use "types/elastic" as elastic with ($hamburger-types: settings.$hamburger-types);
@use "types/elastic-r" as elasticr with ($hamburger-types: settings.$hamburger-types);
@use "types/emphatic" as emphatic with ($hamburger-types: settings.$hamburger-types);
@use "types/emphatic-r" as emphaticr with ($hamburger-types: settings.$hamburger-types);
@use "types/minus" as minus with ($hamburger-types: settings.$hamburger-types);
@use "types/slider" as slider with ($hamburger-types: settings.$hamburger-types);
@use "types/slider-r" as sliderr with ($hamburger-types: settings.$hamburger-types);
@use "types/spin" as spin with ($hamburger-types: settings.$hamburger-types);
@use "types/spin-r" as spinr with ($hamburger-types: settings.$hamburger-types);
@use "types/spring" as spring with ($hamburger-types: settings.$hamburger-types);
@use "types/spring-r" as springr with ($hamburger-types: settings.$hamburger-types);
@use "types/stand" as stand with ($hamburger-types: settings.$hamburger-types);
@use "types/stand-r" as standr with ($hamburger-types: settings.$hamburger-types);
@use "types/squeeze" as squeeze with ($hamburger-types: settings.$hamburger-types);
@use "types/vortex" as vortex with ($hamburger-types: settings.$hamburger-types);
@use "types/vortex-r" as vortexr with ($hamburger-types: settings.$hamburger-types);

// Base Hamburger Styles
@include base.hamburger-base();
